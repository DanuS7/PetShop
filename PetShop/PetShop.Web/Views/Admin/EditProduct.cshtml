@model PetShop.Web.Models.EditProduct

@{
    ViewBag.Title = "EditProduct";
    Layout = "~/Views/Shared/Admin Layout/_AdminLayout.cshtml";
}

<div class="dashboard-wrapper">
    <div class="container-fluid  dashboard-content">
        <div class="row">
            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
                <div class="card">
                    <div class="card-body">
                        <h2>Edit Product</h2>
                        @using (Html.BeginForm("EditProduct", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>Product</h4>
                        <hr />
                        <div class="form-group">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Title, "", new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control",
                                   placeholder = "Add Product Title",
                                   value = Model?.Title ?? "",
                                   required = "true",
                               }
                           })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Price, new
                                {
                                    htmlAttributes = new
                           {
                               @class = "form-control",
                               type = "text",
                               placeholder = "Add Product Price",
                               value = Model?.Price,
                               required = "true",

                           }
                           })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Description, new
                                {
                                    htmlAttributes = new
                           {
                               @class = "form-control",
                               type = "textbox",
                               placeholder = "Add Product Description",
                               value = Model?.Description ?? "",
                               required = "true",
                           }
                           })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.AvailableUnits, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.AvailableUnits, new
                                {
                                    htmlAttributes = new
                           {
                               @class = "form-control",
                               type = "number",
                               placeholder = "Add Product Units",
                               value = Model.AvailableUnits,
                               required = true,
                           }
                                })
                                @Html.ValidationMessageFor(model => model.AvailableUnits, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.Category, Enum.GetValues(typeof(PetShop.Domain.Enums.ProductCategory)).Cast<PetShop.Domain.Enums.ProductCategory>().Select(x => new SelectListItem
                           {
                               Text = x.ToString(),
                               Value = ((int)x).ToString()
                           }), "Select Category", new
                           {
                               @class = "form-control",
                               value = Model?.Category,
                               required = "true",
                           })
                                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Default Image", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <!-- Display the current image -->
                                @if (Model.OldImage != null)
                                {
                                    <img src="data:image;base64,@Model.OldImage" alt="@Model.Title" style="max-width: 100px; max-height: 100px;" />
                                }
                                <!-- File input for default image -->
                                <input type="file" id="defaultImageFile" name="DefaultImageFile" />
                                @Html.ValidationMessageFor(model => model.DefaultImageFile, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-default" />
                                <a href="@Url.Action("Products")" class="btn btn-success btn-sm float-right">Back</a>
                            </div>
                        </div>
                    </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

